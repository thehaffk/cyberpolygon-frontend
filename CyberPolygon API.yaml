openapi: 3.0.3
info:
  title: CyberPolygon API
  version: 1.0.0
  description: API документация для CyberPolygon
paths:
  /cyberpolygon/api/v1/avatars/:
    get:
      operationId: cyberpolygon_api_v1_avatars_list
      tags:
      - cyberpolygon
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserAvatar'
          description: ''
    post:
      operationId: cyberpolygon_api_v1_avatars_create
      tags:
      - cyberpolygon
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserAvatar'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserAvatar'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserAvatar'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserAvatar'
          description: ''
  /cyberpolygon/api/v1/avatars/{id}/:
    get:
      operationId: cyberpolygon_api_v1_avatars_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          pattern: ^[0-9]+$
        required: true
      tags:
      - cyberpolygon
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserAvatar'
          description: ''
    put:
      operationId: cyberpolygon_api_v1_avatars_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          pattern: ^[0-9]+$
        required: true
      tags:
      - cyberpolygon
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserAvatar'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserAvatar'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserAvatar'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserAvatar'
          description: ''
    patch:
      operationId: cyberpolygon_api_v1_avatars_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          pattern: ^[0-9]+$
        required: true
      tags:
      - cyberpolygon
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserAvatar'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUserAvatar'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUserAvatar'
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserAvatar'
          description: ''
    delete:
      operationId: cyberpolygon_api_v1_avatars_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          pattern: ^[0-9]+$
        required: true
      tags:
      - cyberpolygon
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /cyberpolygon/api/v1/categories/:
    get:
      operationId: cyberpolygon_api_v1_categories_list
      tags:
      - cyberpolygon
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Category'
          description: ''
    post:
      operationId: cyberpolygon_api_v1_categories_create
      tags:
      - cyberpolygon
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Category'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Category'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Category'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
  /cyberpolygon/api/v1/category/{id}/:
    get:
      operationId: cyberpolygon_api_v1_category_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          pattern: ^[0-9]+$
        required: true
      tags:
      - cyberpolygon
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
    put:
      operationId: cyberpolygon_api_v1_category_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          pattern: ^[0-9]+$
        required: true
      tags:
      - cyberpolygon
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Category'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Category'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Category'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
    patch:
      operationId: cyberpolygon_api_v1_category_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          pattern: ^[0-9]+$
        required: true
      tags:
      - cyberpolygon
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCategory'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCategory'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCategory'
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
    delete:
      operationId: cyberpolygon_api_v1_category_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          pattern: ^[0-9]+$
        required: true
      tags:
      - cyberpolygon
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /cyberpolygon/api/v1/comment/{id}/:
    get:
      operationId: cyberpolygon_api_v1_comment_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          pattern: ^[0-9]+$
        required: true
      tags:
      - cyberpolygon
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comments'
          description: ''
    put:
      operationId: cyberpolygon_api_v1_comment_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          pattern: ^[0-9]+$
        required: true
      tags:
      - cyberpolygon
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Comments'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Comments'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Comments'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comments'
          description: ''
    patch:
      operationId: cyberpolygon_api_v1_comment_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          pattern: ^[0-9]+$
        required: true
      tags:
      - cyberpolygon
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedComments'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedComments'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedComments'
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comments'
          description: ''
    delete:
      operationId: cyberpolygon_api_v1_comment_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          pattern: ^[0-9]+$
        required: true
      tags:
      - cyberpolygon
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /cyberpolygon/api/v1/comments/:
    get:
      operationId: cyberpolygon_api_v1_comments_list
      tags:
      - cyberpolygon
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Comments'
          description: ''
    post:
      operationId: cyberpolygon_api_v1_comments_create
      tags:
      - cyberpolygon
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Comments'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Comments'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Comments'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comments'
          description: ''
  /cyberpolygon/api/v1/task/{id}/:
    get:
      operationId: cyberpolygon_api_v1_task_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          pattern: ^[0-9]+$
        required: true
      tags:
      - cyberpolygon
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
          description: ''
    put:
      operationId: cyberpolygon_api_v1_task_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          pattern: ^[0-9]+$
        required: true
      tags:
      - cyberpolygon
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Task'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Task'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Task'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
          description: ''
    patch:
      operationId: cyberpolygon_api_v1_task_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          pattern: ^[0-9]+$
        required: true
      tags:
      - cyberpolygon
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTask'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTask'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTask'
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
          description: ''
    delete:
      operationId: cyberpolygon_api_v1_task_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          pattern: ^[0-9]+$
        required: true
      tags:
      - cyberpolygon
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /cyberpolygon/api/v1/tasks/:
    get:
      operationId: cyberpolygon_api_v1_tasks_list
      tags:
      - cyberpolygon
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Task'
          description: ''
    post:
      operationId: cyberpolygon_api_v1_tasks_create
      tags:
      - cyberpolygon
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Task'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Task'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Task'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
          description: ''
  /cyberpolygon/api/v1/user/{id}/:
    get:
      operationId: cyberpolygon_api_v1_user_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          pattern: ^[0-9]+$
        required: true
      tags:
      - cyberpolygon
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    put:
      operationId: cyberpolygon_api_v1_user_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          pattern: ^[0-9]+$
        required: true
      tags:
      - cyberpolygon
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    patch:
      operationId: cyberpolygon_api_v1_user_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          pattern: ^[0-9]+$
        required: true
      tags:
      - cyberpolygon
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUser'
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    delete:
      operationId: cyberpolygon_api_v1_user_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          pattern: ^[0-9]+$
        required: true
      tags:
      - cyberpolygon
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /cyberpolygon/api/v1/users/:
    get:
      operationId: cyberpolygon_api_v1_users_list
      tags:
      - cyberpolygon
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
          description: ''
    post:
      operationId: cyberpolygon_api_v1_users_create
      tags:
      - cyberpolygon
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /cyberpolygon/v1/get_markdown_post/:
    post:
      operationId: cyberpolygon_v1_get_markdown_post_create
      tags:
      - cyberpolygon
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /cyberpolygon/v1/tasks/check_flag:
    post:
      operationId: cyberpolygon_v1_tasks_check_flag_create
      tags:
      - cyberpolygon
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /cyberpolygon/v1/tests/:
    get:
      operationId: cyberpolygon_v1_tests_retrieve
      tags:
      - cyberpolygon
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
    post:
      operationId: cyberpolygon_v1_tests_create
      tags:
      - cyberpolygon
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /cyberpolygon/v1/tests/check/:
    post:
      operationId: cyberpolygon_v1_tests_check_create
      tags:
      - cyberpolygon
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /cyberpolygon/v1/tests/content/:
    post:
      operationId: cyberpolygon_v1_tests_content_create
      tags:
      - cyberpolygon
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /cyberpolygon/v1/vagrant/relaod:
    post:
      operationId: cyberpolygon_v1_vagrant_relaod_create
      tags:
      - cyberpolygon
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /cyberpolygon/v1/vagrant/start:
    post:
      operationId: cyberpolygon_v1_vagrant_start_create
      tags:
      - cyberpolygon
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /cyberpolygon/v1/vagrant/stop:
    post:
      operationId: cyberpolygon_v1_vagrant_stop_create
      tags:
      - cyberpolygon
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
components:
  schemas:
    Category:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 50
      required:
      - id
      - name
    Comments:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        task_id:
          type: integer
        user_id:
          type: integer
        comment:
          type: string
        rating:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - comment
      - created_at
      - id
      - rating
      - task_id
      - user_id
    PatchedCategory:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 50
    PatchedComments:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        task_id:
          type: integer
        user_id:
          type: integer
        comment:
          type: string
        rating:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
        created_at:
          type: string
          format: date-time
          readOnly: true
    PatchedTask:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 100
        description:
          type: string
        created_at:
          type: string
          format: date
          readOnly: true
    PatchedUser:
      type: object
      properties:
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
          maxLength: 254
        telegram_id:
          type: string
          nullable: true
          maxLength: 50
        user_data:
          type: string
        password:
          type: string
          maxLength: 128
    PatchedUserAvatar:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date
        user_id:
          type: integer
    Task:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 100
        description:
          type: string
        created_at:
          type: string
          format: date
          readOnly: true
      required:
      - created_at
      - description
      - id
      - title
    User:
      type: object
      properties:
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
          maxLength: 254
        telegram_id:
          type: string
          nullable: true
          maxLength: 50
        user_data:
          type: string
        password:
          type: string
          maxLength: 128
      required:
      - email
      - password
      - user_data
      - username
    UserAvatar:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date
        user_id:
          type: integer
      required:
      - created_at
      - id
      - user_id
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
    tokenAuth:
      type: apiKey
      in: header
      name: Authorization
      description: Token-based authentication with required prefix "Token"
